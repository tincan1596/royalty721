name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci
  skip_test: 'true'

jobs:
  unit-tests:
    name: Unit & Fuzz Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Show Forge version
        run: forge --version

      - name: Run Forge fmt
        run: forge fmt --check

      - name: Run Forge build
        run: forge build --sizes

      - name: Cache project build cache
        uses: actions/cache@v3
        with:
          path: cache
          key: ${{ runner.os }}-foundry-build-${{ hashFiles('foundry.toml') }}
          restore-keys: |
            ${{ runner.os }}-foundry-build-

      - name: Run Forge tests (unit only, no fork)
        if: env.skip_test != 'true'
        run: forge test -vvv --skip "fork"  

  fork-tests:
    name: Mainnet Fork Tests (main only)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}  
      BLOCK_NUMBER: 18000000
      CHAIN: mainnet 
      PORT: 8545
      CHAIN_ID: 1        
      ANVIL_MAINNET: http://127.0.0.1:8545
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Cache Foundry fork data
        uses: actions/cache@v3
        with:
          path: |
            ~/.foundry/cache/rpc
            ~/.foundry/cache/signatures
            .anvil
          key: ${{ runner.os }}-foundry-rpc-${{ env.CHAIN }}-${{ env.BLOCK_NUMBER }}
          restore-keys: |
            ${{ runner.os }}-foundry-rpc-${{ env.CHAIN }}-

      - name: Start Anvil (forked, persistent state)
        run: |
          mkdir -p .anvil
          nohup anvil \
            --fork-url "${MAINNET_RPC_URL}" \
            --fork-block-number "${BLOCK_NUMBER}" \
            --state ".anvil/${CHAIN}-${BLOCK_NUMBER}.json" \
            --port "${PORT}" \
            --chain-id "${CHAIN_ID}" \
            --silent > anvil.log 2>&1 &
          for i in {1..30}; do nc -z 127.0.0.1 "${PORT}" && break || sleep 1; done
          echo "Anvil is up"


      - name: Run Forge fork tests
        if: env.skip_test != 'true'
        run: forge test -vvv --fork-url $ANVIL_MAINNET --match-path "test/fork/*"

      - name: Stop Anvil
        run: pkill -f "^anvil" || true
